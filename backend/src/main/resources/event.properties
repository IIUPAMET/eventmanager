event.createWithoutTime=\
  INSERT INTO \"Event\" \
  (id,name,group_id,folder_id,creator_id,start_time,end_time,visibility,description,status) \
  VALUES(?,?, ?, NULL, CAST(? AS UUID),?,?,?,?,?)

event.create=\
  INSERT INTO \"Event\" \
  (id,name,group_id,folder_id,creator_id,start_time,end_time,visibility,description,status) \
  VALUES(?,?, ?, NULL, CAST(? AS UUID),(? + ?::INTERVAL), \
  (? + ?::INTERVAL),?,?,?)

event.deleteById=\
  UPDATE \"Event\" SET status = (SELECT id FROM \"Event_Status\" WHERE name = 'DELETED') \
  WHERE id = CAST (? AS UUID)

event.delete=\
  DELETE FROM \"Event\" WHERE id = CAST (? AS UUID)

event.getStatusId=\
  SELECT id FROM \"Event_Status\" WHERE name = ?

event.getVisibilityId=\
  SELECT id FROM \"Event_Visibility\" WHERE name = ?

event.getProirityId=\
  SELECT id FROM \"Customer_Event_Priority\" WHERE name = ?

event.getEventsByCustId=\
  SELECT \"Event\".id AS id, \"Event\".name AS name, start_time, end_time, \"Event\".description AS description, \
  \"Event_Visibility\".name AS visibility, \"Event_Status\".name AS status \
  FROM (\"Event\" INNER JOIN \"Event_Visibility\" \
  ON \"Event\".visibility = \"Event_Visibility\".id) \
  INNER JOIN \"Event_Status\" \
  ON \"Event\".status = \"Event_Status\".id \
  WHERE creator_id = CAST(? AS UUID) \
  AND start_time IS NOT NULL \
  AND end_time IS NOT NULL \
  AND \"Event_Status\".name != 'DELETED' \
  AND \"Event_Status\".name != 'DRAFT' \
  AND (\"Event\".start_time - LOCALTIMESTAMP <= '1 month') \
  ORDER BY start_time

event.createInvitation=\
  INSERT INTO \"Customer_Event\"(id, customer_id, event_id, status, priority)" \
  VALUES (uuid_generate_v1(),(SELECT id FROM \"Customer\" WHERE login = ?), cast(? AS UUID), \
  (SELECT id FROM \"Customer_Event_Status\" WHERE name = 'SENT'), \
  (SELECT id FROM \"Customer_Event_Priority\" WHERE name = 'LOW'))

event.getTimeToStart=\
  SELECT (start_time - localtimestamp) FROM \"Event\" WHERE id = CAST(? AS UUID)

event.getInvitesByCustId=\
  SELECT \"Event\".id AS id,\"Event\".name AS name,\"Event\".description AS description, \
  \"Event_Status\".name AS status \
  FROM (\"Event\" INNER JOIN \"Event_Status\" ON status = \"Event_Status\".id) \
  INNER JOIN \"Customer_Event\" ON \"Event\".id = \"Customer_Event\".event_id \
  WHERE \"Event_Status\".name = 'EVENT' \
  AND \"Customer_Event\".status = (SELECT id FROM \"Customer_Event_Status\" WHERE name = 'SENT') \
  AND \"Customer_Event\".customer_id = CAST(? AS UUID)

customer_event.create=\
  INSERT INTO \"Customer_Event\" \
  (id,event_id,customer_id,start_date_notification,frequency_value,priority,status) \
  VALUES(uuid_generate_v1(),?,CAST(? AS UUID),?,1,?,(SELECT id FROM \"Customer_Event_Status\" WHERE name = 'ACCEPTED'))

note.getByCustId=\
  SELECT \"Event\".id AS id,\"Event\".name AS name,\"Event\".description AS description, \
  \"Event_Status\".name AS status \
  FROM \"Event\" INNER JOIN \"Event_Status\" ON status = \"Event_Status\".id \
  WHERE \"Event_Status\".name = 'NOTE' \
  AND \"Event\".creator_id = CAST(? AS UUID)

drafts.getByCustId=\
  SELECT \"Event\".id AS id,\"Event\".name AS name,\"Event\".description AS description, \
  "Event_Status\".name AS status \
  FROM \"Event\" INNER JOIN \"Event_Status\" ON status = \"Event_Status\".id \
  WHERE \"Event_Status\".name = 'DRAFT' \
  AND \"Event\".creator_id = CAST(? AS UUID)